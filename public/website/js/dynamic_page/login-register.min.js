var showErrorValidation = function (t, e) {
    var a = e.responseJSON.errors;
    for (error in a) {
        var r = t.find('[name="' + error + '"]').closest(".cfield");
        r.after('<p class="text-danger text-left error-auth">'.concat(a[error].join(". "), "</p>")), r.addClass("no-margin");
    }
},
resetErrorValidation = function (t) {
    t.find(".submit-button").attr("type", "submit"), t.find(".submit-text").show(), t.find(".loading").css("display", "none"), $(".error-auth").remove(), $(".cfield").removeClass("no-margin");
},
showRecaptchaError = function (t) {
    $(t).after('<p class="text-danger text-left error-auth text-center no-margin">Recaptcha Error</p>');
},
prepareValidation = function (t) {
    t.find(".submit-button").attr("type", "button"), t.find(".submit-text").hide(), t.find(".loading").css("display", "inline-block");
};
$(function () {
recaptchaReset(),
    $("#forget-password").on("click", function () {
        $(".signin-popup-box").fadeOut("fast"), $("#modal-reset-password").fadeIn("normal");
    }),
    $("#form-reset-password").on("submit", function (t) {
        t.preventDefault();
        var e = $(this);
        prepareValidation(e),
            $.ajax({
                url: $(this).attr("action"),
                type: $(this).attr("method"),
                dataType: "json",
                data: $(this).serialize(),
                success: function (t) {
                    $("#form-reset-password").remove(),
                        $("#reset-title").text("Berhasil"),
                        $("#modal-reset-password")
                            .find(".account-popup")
                            .append(
                                '<div>\n                        <br><hr>\n                        <p class="text-success text-center">Reset password berhasil, silahkan check email Anda untuk melanjutkan proses penggantian password.</p>\n                    </div>'
                            );
                },
                statusCode: {
                    422: function (t) {
                        resetErrorValidation(e), showErrorValidation(e, t), recaptchaReset();
                    },
                    400: function (t) {
                        resetErrorValidation(e), showRecaptchaError("#reset-title"), recaptchaReset();
                    },
                },
            });
    }),
    $("#form-change-password-reset").on("submit", function (t) {
        t.preventDefault();
        var e = $(this);
        prepareValidation(e),
            $.ajax({
                url: $(this).attr("action"),
                type: $(this).attr("method"),
                dataType: "json",
                data: $(this).serialize(),
                success: function (t) {
                    $("#form-change-password-reset").remove(),
                        $("#change-password-title").text("Berhasil"),
                        $("#modal-change-password-reset")
                            .find(".account-popup")
                            .append('<div>\n                        <br><hr>\n                        <p class="text-success text-center">Password Anda telah diperbaharui.</p>\n                    </div>');
                },
                statusCode: {
                    422: function (t) {
                        resetErrorValidation(e), showErrorValidation(e, t), recaptchaReset();
                    },
                    400: function (t) {
                        resetErrorValidation(e), showRecaptchaError("#change-password-title"), recaptchaReset();
                    },
                },
            });
    }),
    $.ajax({
        url: "/ajax/education-levels",
        type: "GET",
        dataType: "json",
        success: function (t) {
            var e = "";
            t.forEach(function (t) {
                e += '<option value="'.concat(t.id, '">').concat(t.text, "</option>");
            }),
                $("#education-select").chosen("destroy").append(e),
                $("#education-select").chosen();
        },
        statusCode: {
            500: function (t) {
                console.log("Internal Server Error");
            },
        },
    }),
    $("#form-login").on("submit", function (t) {
        t.preventDefault();
        var e = $(this);
        prepareValidation(e),
            $.ajax({
                url: $(this).attr("action"),
                type: $(this).attr("method"),
                data: $(this).serialize(),
                dataType: "json",
                success: function (t) {
                    var e = null == t.redirect ? "/profiles/personal-identity" : t.redirect;
                    window.location.href = e;
                },
                statusCode: {
                    422: function (t) {
                        resetErrorValidation(e), showErrorValidation(e, t), recaptchaReset();
                    },
                    400: function (t) {
                        resetErrorValidation(e), showRecaptchaError("#login-title"), recaptchaReset();
                    },
                },
            });
    }),
    $("#form-register").on("submit", function (t) {
        t.preventDefault();
        var e = $(this);
        prepareValidation(e),
            $.ajax({
                url: e.attr("action"),
                type: e.attr("method"),
                data: e.serialize(),
                dataType: "json",
                success: function (t) {
                    t.success &&
                        ($(".term-register").hide(),
                        $("#form-register").remove(),
                        $("#register-title").text("Pendaftaran Berhasil"),
                        $("#modal-register")
                            .find(".account-popup")
                            .append(
                                '<div>\n                \t\t\t<br><hr>\n\t\t\t\t\t\t\t<p class="text-success text-center">Pendaftaran anda berhasil, mohon cek email untuk konfirmasi dan melanjutkan proses lamaran Anda</p>\n                \t\t</div>'
                            ),
                        recaptchaReset());
                },
                statusCode: {
                    422: function (t) {
                        resetErrorValidation(e), showErrorValidation(e, t), recaptchaReset();
                    },
                    400: function (t) {
                        resetErrorValidation(e), showRecaptchaError("#register-title"), recaptchaReset();
                    },
                },
            });
    });
});
